# Generated by Django 5.2 on 2025-07-24 19:53

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("generator", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="NumberPattern",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "game_type",
                    models.CharField(
                        choices=[
                            ("mega_millions", "Mega Millions"),
                            ("powerball", "Powerball"),
                        ],
                        max_length=20,
                    ),
                ),
                ("pattern_type", models.CharField(max_length=50)),
                ("pattern_description", models.CharField(max_length=200)),
                ("frequency", models.IntegerField(default=0)),
                ("last_occurrence", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="NumberStatistics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "game_type",
                    models.CharField(
                        choices=[
                            ("mega_millions", "Mega Millions"),
                            ("powerball", "Powerball"),
                        ],
                        max_length=20,
                    ),
                ),
                ("stat_type", models.CharField(max_length=50)),
                ("stat_value", models.CharField(max_length=200)),
                ("calculation_date", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="SmartPrediction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "game_type",
                    models.CharField(
                        choices=[
                            ("mega_millions", "Mega Millions"),
                            ("powerball", "Powerball"),
                        ],
                        max_length=20,
                    ),
                ),
                ("prediction_date", models.DateTimeField(auto_now_add=True)),
                ("predicted_numbers", models.CharField(max_length=100)),
                ("predicted_mega_ball", models.IntegerField()),
                (
                    "confidence_score",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ]
                    ),
                ),
                (
                    "algorithm_used",
                    models.CharField(default="frequency_analysis", max_length=50),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name="generatedcombination",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="savedcombination",
            name="is_active",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="savedcombination",
            name="notes",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="exportlog",
            name="export_type",
            field=models.CharField(
                choices=[("csv", "CSV"), ("excel", "Excel"), ("pdf", "PDF")],
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="NumberFrequency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "game_type",
                    models.CharField(
                        choices=[
                            ("mega_millions", "Mega Millions"),
                            ("powerball", "Powerball"),
                        ],
                        max_length=20,
                    ),
                ),
                ("number", models.IntegerField()),
                ("is_mega_ball", models.BooleanField(default=False)),
                ("frequency", models.IntegerField(default=0)),
                ("last_drawn", models.DateTimeField(blank=True, null=True)),
                ("days_since_drawn", models.IntegerField(default=0)),
            ],
            options={
                "unique_together": {("game_type", "number", "is_mega_ball")},
            },
        ),
        migrations.CreateModel(
            name="SyndicateMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("joined_date", models.DateTimeField(auto_now_add=True)),
                ("contribution_share", models.FloatField(default=1.0)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SyndicatePool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "game_type",
                    models.CharField(
                        choices=[
                            ("mega_millions", "Mega Millions"),
                            ("powerball", "Powerball"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("max_members", models.IntegerField(default=10)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_pools",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        through="generator.SyndicateMembership",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="syndicatemembership",
            name="pool",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="generator.syndicatepool",
            ),
        ),
        migrations.CreateModel(
            name="PoolCombination",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("main_numbers", models.CharField(max_length=100)),
                ("mega_ball", models.IntegerField()),
                ("added_date", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "added_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "pool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.syndicatepool",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "preferred_game",
                    models.CharField(
                        choices=[
                            ("mega_millions", "Mega Millions"),
                            ("powerball", "Powerball"),
                        ],
                        default="mega_millions",
                        max_length=20,
                    ),
                ),
                (
                    "lucky_numbers",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("notification_preferences", models.JSONField(default=dict)),
                ("total_combinations_generated", models.IntegerField(default=0)),
                ("total_combinations_saved", models.IntegerField(default=0)),
                ("member_since", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WinningAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("prize_tier", models.CharField(max_length=50)),
                ("estimated_winnings", models.CharField(max_length=100)),
                ("alert_date", models.DateTimeField(auto_now_add=True)),
                ("is_read", models.BooleanField(default=False)),
                ("notification_sent", models.BooleanField(default=False)),
                (
                    "combination",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.savedcombination",
                    ),
                ),
                (
                    "draw",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.lotterydraw",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AlterUniqueTogether(
            name="syndicatemembership",
            unique_together={("user", "pool")},
        ),
    ]
